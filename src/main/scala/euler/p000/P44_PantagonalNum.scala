package euler

object P44 {

  
  def penta(n: Int) = 
    (3*n - 1)*n/2
  
  def isPenta(n: Int) = {
    val r = (1 to Int.MaxValue/2).view.map(penta).find(_ >= n)
    if (r.get == n) {
      true
    } else {
      false
    }
  }
  
  isPenta(146)
  
  def main(args: Array[String]): Unit = {
    for (a <- 2 to Int.MaxValue;
    		b <- 1 until a;
    		pa = penta(a);
    		pb = penta(b);
    		if (isPenta(pa-pb) && isPenta(pa+pb))//;
//    		println(a, b)
//        ) yield (a,b)
    		  ) {
      println(a, b)
      //slow
    }
  }

  
}

/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/