package euler.p000

object P45 {
  def tri(n: Long) = n*(n+1)/2
  def pen(n: Long) = (3*n - 1)*n/2
  def hex(n: Long) = n*(2*n-1)
  
  def main(args: Array[String]): Unit = {
    var t = 285
    var p = 165
    var h = 143
    
    var t_ = 0L
    
    do {
      t += 1
      t_ = tri(t)
      
      while(t_ > pen(p))
        p += 1
        
      while (t_ > hex(h))
        h += 1
      
    } while (!(t_ == pen(p) && t_ == hex(h)))
      
      println(t, t_)
  }

  
}

/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/